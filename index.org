#   -*- mode: org; fill-column: 60 -*-
#+STARTUP: showall
#+TITLE:  BMF | TOC

[[https://img.shields.io/badge/made%20by-Chenla%20Institute-999999.svg?style=flat-square]] 
[[https://img.shields.io/badge/class-deploy-0072B2.svg?style=flat-square]]
[[https://img.shields.io/badge/entity-TOC-0072B2.svg?style=flat-square]]
[[https://img.shields.io/badge/status-wip-D55E00.svg?style=flat-square]]
[[https://img.shields.io/badge/licence-MIT%2FCC%20BY--SA%204.0-000000.svg?style=flat-square]]

* Table of Contents
:PROPERTIES:
:CUSTOM_ID: 
:Name:      /home/deerpig/proj/chenla/bmf/index.org
:Created:   2017-02-06T09:41@Prek Leap (11.642600N-104.919210W)
:ID:        c10d3a29-5475-45c7-a604-707d89f426c5
:VER:       551917936.623012821
:GEO:       48P-491193-1287029-15
:BXID:      proj:DHY4-0486
:Class:     deploy
:Entity:    toc
:Status:    wip 
:Licence:   MIT/CC BY-SA 4.0
:END:


 - [[./bmf-header.org][Header]]
 - [[./bmf-geo.org][Geographic Encoding]]
 - [[./bmf-notes.org][Notes]]
 - [[./bmf-frbr-and-marc.org][FRBR & MARC]]


#+begin_src emacs-lisp

'("ts:subject" "ts:predicate" "ts: object" 
  ((bmf:id     . "uuid" )     ;; uuid+ver (microseconds) 
   (bmf:owner  . "value")     ;; valid identity, label, or url 
   (bmf:group  . "group")     ;; groups who have access
   (bmf:stamp  . "stamp")     ;; time-place stamp
   (bmf:agent  . "agent")     ;; entity that created quad
   (bmf:action . "action")    ;; action used to create quad
   (bmf:src    . "source")    ;; where triple originated
   (bmf:cite   . "citataton") ;; authority src is citing
   (bmf:access . "OOGGWW")    ;; nix style permissions
   (bmf:prob   . "xxx")       ;; probablistic-weight
   (bmf:conf   . "xxx")       ;; confidence-weight
   ))
#+end_src

Weights:

 -  confidence-weight
 -  probablistic-weight 

hunches:

It's worthless for humans to state numerical preferences.
All sorts of cognitive biases kick in.  But it's not bad to
provide a hunch which a baysian algorthm can use as a
starting point to determine certainty and propability.

So we will use very basic words to indicate a hunch that a
statement is true or false, and certainty is low medium or
high.  Some people will want to use more precision but at
the moment I don't see helping much and will likely make
things worse.  After all this is a hunch and hunches are
best guesses.

   true|false  nil|low|medium|high

** inline markup

markup statements within a text.  A statement is any
assertion that something is true or false


[Prai Yut] was born on [20 feb 2044] in [Bangkok-Phuket
Hospital] at 9:22 in the evening.

   So:
        sub:  per:PraiYut_Jaksan 
        pre:  rel:born
        obj:  dt:2044-2-20:21:22
        src:  self

        sub:  per:PraiYut_Jaksan
        pre:  rel:born
        obj:  geo:Bangkok_Phuket_Hospital
        src:  self

Always try to place the markup on the object.

---

What if we put the metadata at the end of the document,
together with the notes and bibliography?  

  - notes       :fn:
  - references  :ref:
  - statements  :stmt:
  - links       :lnk: rich links?

in org we can then do using subheadings with property boxes

When we create 


#+begin_example
**   key                                                              :stmt:
:PROPERTIES:
:ID:    a7ac9a99-8aa4-4eb2-9108-a192b4441400
:sub:   per:PraiYut_Jaksan 
:pred:  rel:born
:obj:   dt:2044-2-20:21:22+7  geo:Bangkok_Phuket_Hospital
:src:   file:projects.org::**heading
:ref:   yut:2044birth-cert
:hunch: true high
:END:

#+begin_quote
[[per:PraiYut_Jaksan][Prai Yut]] was [[rel:born][born]] on [[dt:2044-2-20:21:22+7][20 feb 2044]] in [[geo:Bangkok_Phuket_Hospital][Bangkok-Phuket Hospital]]
at 9:22 in the evening.
#+end_quote
#+end_example

This should result in the following two quads:

#+begin_src emacs-lisp
("per:PraiYut_Jaksan" "rel:born" "dt:2044-2-20:21:22+7"
  ((bmf:id     "802f09ec-03ce-4792-b397-8bb58104f9f5")
   (bmf:owner  "per:deerpig")
   (bmf:stamp  "created:2018-07-04T10:29:56+07:00")
   {bmf:src    "file:projects.org::**heading")
   (bmf:ref    "yut:2044birth-cert")
   (bmf:hunch  "true high")
   (bmf:access "w+w+r+")
   (bmf:agent  "per:deerpig")
   (bmf:acton  "create")))
("per:PraiYut_Jaksan" "rel:born" "geo:Bangkok_Phuket_Hospital"
  ((bmf:id     "91363162-113a-42e3-a322-16a09ae47e3c")
   (bmf:stamp  "created:2018-07-04T10:29:56+07:00")
   (bmf:owner  "per:deerpig")
   {bmf:src    "file:projects.org::**heading") ;; or id#
   (bmf:ref    "yut:2044birth-cert") ;; key to local record
   (bmf:hunch  "true high")
   (bmf:access "w+w+r+")
   (bmf:agent  "per:deerpig")
   (bmf:acton  "create")))
#+end_src

These would be parsed, processed, certainties and
probabilities calculated and woven into to the horcruxes'
graph db.  They will then propagate and be added to all
other horcruxes in the hoard.

I don't know how important it will be for horcruxes to
maintain identical mirror databases. Each horcrux will find
add it's own quad to it's own quadstore, propagate and
integrate locally.  So at any one time, the different dbs
will have a slightly different model, depending on the
context of what they are doing and how up to date they are
relative to the other horcruxes.  I think in the end this
will be a feature not a bug.  It won't result in different
facts being given by different horcruxes as much as slightly
different contexts depending on what each horcrux is doing.

Remember as well that all horcruxes will maintain a
blockchain that will establish concensus on which quad from
which horcrux becomes the canonical id and source for a
quad.




** Ontologies

  - dublin core
  - TEI
  - https://schema.org/
  - http://vocab.org/bio/
  - http://vocab.org/relationship/
  - http://vocab.org/frbr/core
  - http://vocab.org/frbr/extended

