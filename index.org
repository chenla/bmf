#   -*- mode: org; fill-column: 60 -*-
#+TITLE: Burr Metadata Framework 
#+STARTUP: showall
#+PROPERTY: filename
  :PROPERTIES:
  :Name: /home/deerpig/proj/chenla/bmf/index.org
  :Created: 2017-02-06T09:41@Prek Leap (11.642600N-104.919210W)
  :ID: c10d3a29-5475-45c7-a604-707d89f426c5
  :URL:
  :END:
#+INCLUDE: ./inc/head.org
#+INCLUDE: ./inc/macros.org

{{{breadcrumbs}}}

#+HTML: <div class="outline-2" id="meta">
| *Author*  | Brad Collins <brad@chenla.org>             |
| *Date*    | {{{time(%Y-%m-%d %H:%M:%S)}}}              |
#+HTML: </div>

#+TOC: headlines 4


* Status of This Document

The latest version of this document is: src_sh[:results value]{git describe --abbrev=0 --tags}

#+HTML: <div class="notice notice-info">
*Changes since the last version*

#+HTML: <ul>

#+BEGIN_SRC sh :exports results :results value html :var TAG="v00.01.02"
  RES='git log $TAG...HEAD --pretty="<li>%s</li>\n" -- (file-name-nondirectory (buffer-file-name))'
  if [ -z $RES ]; then
    RES="<li>no changes</li>"
  fi
  echo $RES
#+END_SRC

#+RESULTS:
#+BEGIN_EXPORT html
<li>no changes</li>
#+END_EXPORT

#+HTML: </ul>
#+HTML: </div>

* Introduction

  - tspaces :: topicspaces
  - dspaces :: doc spaces


Wikipedia title naming conventions


We need a selector mechanism in orgmode for layers to work

can we use org-id for #+insert  ?

* Identities & Roles
:PROPERTIES:
:ID:       7396a2ae-5139-4e84-bedc-fab4bc1b8e5c
:END:

An identity manager could map identities to a virtual, virtual
machine and roles to user accounts on that machine.  In this
way we get all the Unixy goodness that comes with the user
model -- including user home directories, file permissions,
user groups, password, ssh keys etc.

Then email and other accounts are tied to different user
accounts, not to the identity.

So ssh'ing into:

   /ssh:deerpig@HEW1-0756.bxid.org:~/ 

with the proper key-pair would open up that /role/ that would
have it's own storage, email/messaging address and bramble.


  bxid:HEW1-0756  maps  to id:1dc19191-6072-4799-8017-4319a2236101


  bxid's have a a TTL when issued that renew themselves
  based on useage.  

  If it's used once and then not used for 90 days it is
  canceled and the number goes back into the available pool.

  If it is used on a regular basis for 90 days it will
  become permanent for one inactive year.

  If it is used on a regular basis for one year, it stays
  active for 10 years.

  If it is used on a regular basis for ten years, it will
  stay active for 100 years.

Use the same business model as pinboard.in -- one time fee
for life, based on number of users that have signed up.

Since this is supposed to be a personal identity id number,
the number of bxid numbers generated per year must be capped.

Establishing an identity is something that takes time -- new
identities are untrusted by default, but over time, use
patterns and multiple factor authentifications over time
will reinforce an identity until it is something that can be
used to build credit.

Honeypots will be built in -- if you log in and want to see
too much at one time -- you get redirected to a honeypot,
and the honeypot will lock out any other access until the
user resets the account with new keys etc.

Content can be marked public | private | dark  it's like the
Taiwan National Museum, anyone can see anything in the
collection, but you have to ask for it, and there is no
public index of what is in the collection.  No one can get a
dump of all dark content, and there will be a fail2ban
mechanism, as well as an auto destruct feature

[[http://chenla.org]]

* Properties & topicspaces
:PROPERTIES:
:ID:            c3b6190b-2202-4deb-af82-71d3c6d046dc
:CUSTOM_ID:     per:Carl_Marx
:VERSION:       (milliseconds from epoch)
:CREATED:
:BT:            top:English_Philosopers
:TYPE:          typ:Person
:OWNER:         identity@role
:END:


:BT+:  add to list

:BT~:  add to local/personal list

Entities are record types -- with a schema for what metadata
must, should and can be included and rulesets for processing
records.

** Relationships


- T  :: Top
- B  :: Broader
- N  :: Narrower
- R  :: Related
- U  :: Used For
- *P :: Partitive
- *I :: Instantive
- P  :: Primary Term

- UP   ::
- DOWN :: 
- PREV :: 
- NEXT ::


** Initial Topicspaces

*** Chenla
  - bmf   :: global properties (relationships, entity types, metadata)
  - work  :: created works
  - top   :: topics
  - per   :: persons
  - geo   :: locations
  - event :: events
  - rule  :: rule set
  - duck  :: duck tests
  - blob  :: binary objects -- multimedia - media

*** External Authorities

  - loc   :: loc authorities (title, authority, subject heading)
  - wiki: :: wikipedia articles
  - isbn  :: international standard book number
  - doi   :: 

*** Local Personal

  - folk:   :: personal folksonomies
  - link    :: bookmarks
  - ref     :: local bibliography
  - task    :: (includes alt names, In-Progress, Next, Work,
                Done etc)
  - note    :: (includes diary/journal)
  - msg     :: message (email, tweet, sms, alert (notification), etc)
  - quote   :: 
  - per~    :: (includes contacts 
  - event~  :: (includes, appointments, anniverseries etc)
  - work~   :: local documents
  - blob~   :: local binary objects
  - rule~   :: local cascading rule sets
  - duck~   :: local duck tests
  - scholia :: 
  - gloss   ::
* Scope

The scope model is central to BMF.  In BMF, in theory, every
Burr must define it's scope.  In most cases this will be
achieved through inheritance in the cascade, but it still
has to be defined at top levels of trees.

Scope is defined through three attributes: /Level of Detail/
(LOD) Point of View (POV) and Rate of Change (ROC).

** Level of Detail (LOD)

LOD is determined by how close or far the observer is from
what is being defined.  The closer you are, the more detail
you see, the farther away, the less detail you see.

There is no one size fit all for defining LOD.  

In 3-D modeling this is achieved by defining the polygon
count of a model, relative to the distance the model is
placed from the camera.  The closer the camera gets the more
polygons a model can be observed.

In imaging, especially arial and satellite imaging, LOD is
defined by the resolution of a single pixel in an image.  In
astronomy, a single pixel might represent an entire planet
or a star or even a galaxy.  For a satellite image, a pixel
might be anywhere from a kilometer, to a few meters.

In printed matter, such as books and magazines, LOD is
measured sort of like seeing a forest, in which you can only
see each tree as a thin trunk or canopy, and then only the
trees that are at the edge of the forest.  The trees inside
the forest are completely hidden.  The same goes for books
in a brick and mortar library.  From outside the stacks, all
you can see are rows of shelves with ranges of classifiction
call numbers for books in each row.  But the books are
completely hidden.  When you get closer you can see the
books on the shelves of a row, but only the spines, which
can only be distinguished from each other by color and
binding type.  You'll usually be able to pick out which
books are older, which were cheaply printed paperbacks and
which are quality constructed hard-backs.  Get a little
closer and you can see a little metadata for each book --
it's title, author and a logo for the publisher.  Take a
book off the shelf and if there is dest jacket you can see
the fill title, author, perhaps an illustration, and a blurb
on the back, open the cover and the inside sleave of the
jacket will have a summary of the book.  Open to the title
page and the publishing information on the opposite side of
the title page and you will see detailed, structured
metadata on when the book was published, it's publishing
history, and perhaps a suggested library catalog record for
the book. Getting closer, you open the book to the Table of
Contents to see the overall organization of the book.  And
then getting closer and you are in the actual text of the
book -- at full resolution.

LOD could also refer to levels of expertise -- a layman or
beginner might only see a simple outline of a topic which
does not use technical terms.  But as skills increase,
so will the level of detail.  This is one half of leaning --
the other half is in the level of proficiency through
memorization and practice which is not only a measure of the
level of detail but a measure of mastery -- which is handled
by ROC attribute.

** Scheme Requirements

All values for LOD, POV and ROC MUST be given as a value
within a defined Scheme or Scale.

So we will MUST define different scales or Schemes
for different types of context, media and information.

Schemes for each class of Scheme MUST be appled to an entire
topicspace.

Interoperability between Schemes SHOULD be defined in a
ruleset, so that Scheme A is defined relative to Scheme B.
Exceptions to this requirement is expected to be rare.  Even
when a particular Scheme is the first to be defined, the
schem MUST be based on empirical observations and backed up
with references, and authorities.
