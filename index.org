#   -*- mode: org; fill-column: 60 -*-
#+TITLE: Burr Metadata Framework 
#+STARTUP: showall
#+PROPERTY: filename
  :PROPERTIES:
  :Name: /home/deerpig/proj/chenla/bmf/index.org
  :Created: 2017-02-06T09:41@Prek Leap (11.642600N-104.919210W)
  :ID: c10d3a29-5475-45c7-a604-707d89f426c5
  :URL:
  :END:
#+INCLUDE: ./inc/head.org
#+INCLUDE: ./inc/macros.org

{{{breadcrumbs}}}

#+HTML: <div class="outline-2" id="meta">
| *Author*  | Brad Collins <brad@chenla.org>             |
| *Date*    | {{{time(%Y-%m-%d %H:%M:%S)}}}              |
#+HTML: </div>

#+TOC: headlines 4


* Status of This Document

The latest version of this document is: src_sh[:results value]{git describe --abbrev=0 --tags}

#+HTML: <div class="notice notice-info">
*Changes since the last version*

#+HTML: <ul>

#+BEGIN_SRC sh :exports results :results value html :var TAG="v00.01.02"
  RES='git log $TAG...HEAD --pretty="<li>%s</li>\n" -- (file-name-nondirectory (buffer-file-name))'
  if [ -z $RES ]; then
    RES="<li>no changes</li>"
  fi
  echo $RES
#+END_SRC

#+RESULTS:
#+BEGIN_EXPORT html
<li>no changes</li>
#+END_EXPORT

#+HTML: </ul>
#+HTML: </div>

* Introduction

  - tspaces :: topicspaces
  - dspaces :: doc spaces


Wikipedia title naming conventions


We need a selector mechanism in orgmode for layers to work

can we use org-id for #+insert  ?

* Identities & Roles
:PROPERTIES:
:ID:       7396a2ae-5139-4e84-bedc-fab4bc1b8e5c
:END:

An identity manager could map identities to a virtual, virtual
machine and roles to user accounts on that machine.  In this
way we get all the Unixy goodness that comes with the user
model -- including user home directories, file permissions,
user groups, password, ssh keys etc.

Then email and other accounts are tied to different user
accounts, not to the identity.

So ssh'ing into:

   /ssh:deerpig@HEW1-0756.bxid.org:~/ 

with the proper key-pair would open up that /role/ that would
have it's own storage, email/messaging address and bramble.


  bxid:HEW1-0756  maps  to id:1dc19191-6072-4799-8017-4319a2236101





* Properties & topicspaces
:PROPERTIES:
:ID:            c3b6190b-2202-4deb-af82-71d3c6d046dc
:CUSTOM_ID:     per:Carl_Marx
:VERSION:       (milliseconds from epoch)
:CREATED:
:BT:            top:English_Philosopers
:TYPE:          typ:Person
:OWNER:         identity@role
:END:


:BT+:  add to list

:BT~:  add to local/personal list

Entities are record types -- with a schema for what metadata
must, should and can be included and rulesets for processing
records.

** Relationships


- T  :: Top
- B  :: Broader
- N  :: Narrower
- R  :: Related
- U  :: Used For
- *P :: Partitive
- *I :: Instantive
- P  :: Primary Term

- UP   ::
- DOWN :: 
- PREV :: 
- NEXT ::


** Initial Topicspaces

*** Chenla
  - bmf   :: global properties (relationships, entity types, metadata)
  - work  :: created works
  - top   :: topics
  - per   :: persons
  - geo   :: locations
  - event :: events
  - rule  :: rule set
  - duck  :: duck tests
  - blob  :: binary objects -- multimedia - media

*** External Authorities

  - loc   :: loc authorities (title, authority, subject heading)
  - wiki: :: wikipedia articles
  - isbn  :: international standard book number
  - doi   :: 

*** Local Personal

  - folk:   :: personal folksonomies
  - link    :: bookmarks
  - ref     :: local bibliography
  - task    :: (includes alt names, In-Progress, Next, Work,
                Done etc)
  - note    :: (includes diary/journal)
  - msg     :: message (email, tweet, sms, alert (notification), etc)
  - quote   :: 
  - per~    :: (includes contacts 
  - event~  :: (includes, appointments, anniverseries etc)
  - work~   :: local documents
  - blob~   :: local binary objects
  - rule~   :: local cascading rule sets
  - duck~   :: local duck tests
  - scholia :: 
  - gloss   ::
